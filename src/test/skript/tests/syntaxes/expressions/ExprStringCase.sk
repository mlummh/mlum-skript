test "string cases":
	assert case_equals("Oops!" in lowercase, "oops!") is true with "lowercase failed"
	assert case_equals("Oops!" in uppercase, "OOPS!") is true with "uppercase failed"
	assert case_equals((capitalised "Oops!"), "OOPS!") is true with "capitalised failed"
	assert case_equals("hellO i'm steve!" in proper case, "HellO I'm Steve!") is true with "lenient proper case failed"
	assert case_equals("hellO i'm steve!" in strict proper case, "Hello I'm Steve!") is true with "strict proper case failed"
	assert case_equals("spAwn neW boSs ()" in camel case, "spAwnNeWBoSs()") is true with "lenient camel case failed"
	assert case_equals("spAwn neW boSs ()" in strict camel case, "spawnNewBoss()") is true with "strict camel case failed"
	assert case_equals("geneRate ranDom numBer ()" in pascal case, "GeneRateRanDomNumBer()") is true with "lenient pascal case failed"
	assert case_equals("geneRate ranDom numBer ()" in strict pascal case, "GenerateRandomNumber()") is true with "strict pascal case failed"
	assert case_equals("Hello Player!" in snake case, "Hello_Player!") is true with "default snake case failed"
	assert case_equals("Hello Player!" in lower snake case, "hello_player!") is true with "lower snake case failed"
	assert case_equals("Hello Player!" in upper snake case, "HELLO_PLAYER!") is true with "upper snake case failed"
	assert case_equals("What is your name?" in kebab case, "What-is-your-name?") is true with "default kebab case failed"
	assert case_equals("What is your name?" in lower kebab case, "what-is-your-name?") is true with "lower kebab case failed"
	assert case_equals("What is your name?" in upper kebab case, "WHAT-IS-YOUR-NAME?") is true with "upper kebab case failed"
	assert case_equals("Hello Pl🤬yer!" in snake case, "Hello_Pl🤬yer!") is true with "default snake case failed"
	assert case_equals("He👾lo Player!" in lower snake case, "he👾lo_player!") is true with "lower snake case failed"
	assert case_equals("Hello 👀layer!" in upper snake case, "HELLO_👀LAYER!") is true with "upper snake case failed"
	assert case_equals("What is y🖐ur name?" in kebab case, "What-is-y🖐ur-name?") is true with "default kebab case failed"
	assert case_equals("W🧠at is your name?" in lower kebab case, "w🧠at-is-your-name?") is true with "lower kebab case failed"
	assert case_equals("What 🤵s your name" in upper kebab case, "WHAT-🤵S-YOUR-NAME") is true with "upper kebab case failed"
